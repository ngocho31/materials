# Docker file to create a container with everything needed to compile embedded software
#
# Build the container (once):
#
#  sudo docker build -t embedded -f utils/docker/Dockerfile_embedded .
#
# Use the container:
#
#  sudo docker run -u $(id -u):$(id -g) \
#    -v $(pwd):/embedded -v $HOME/x-tools:/home/developer/x-tools \
#    --device=/dev/ttyUSB0 --group-add dialout \
#    -it --rm embedded
#

# Use Ubuntu 20.04 as the base image
FROM ubuntu:20.04

LABEL maintainer="Ngoc Ho" \
description="Container with everything needed to compile embedded software"

# Set environment variables to non-interactive mode
ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    git ca-certificates wget curl

# For compile crosstool-ng
RUN apt-get install -y --no-install-recommends \
    autoconf automake libtool flex texinfo build-essential help2man gawk unzip libtool-bin bison libncurses5-dev gettext python3

# Kernel Build Dependencies
RUN apt-get install -y \
    make bc rsync device-tree-compiler libssl-dev libelf-dev swig python3-dev python3-setuptools

# QEMU user emulator
RUN apt-get install -y qemu-user

RUN apt-get install -y picocom

# To reduce image size
RUN apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Set default working directory
WORKDIR /embedded

RUN useradd -ms /bin/bash developer && \
    echo "developer ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers

USER developer

# Default command
CMD [ "bash" ]
